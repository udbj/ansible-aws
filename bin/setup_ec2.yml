
# AWS playbook
---

- hosts: localhost
  connection: local
  gather_facts: False

    
  vars:
    key_name: my_aws
    region: ap-southeast-2
    image: ami-07fbdcfe29326c4fb # https://cloud-images.ubuntu.com/locator/ec2/

  tasks:

    - name: Facts
      block:

      - meta: refresh_inventory

      - name: Get instances facts
        ec2_instance_info:
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          region: "{{ region }}"
        register: result

      - name: Instances ID
        debug:
          msg: "ID: {{ item.instance_id }} - State: {{ item.state.name }} - Public DNS: {{ item.public_dns_name }}"
        loop: "{{ result.instances }}"

      tags: always


    - name: Provisioning EC2 instances
      block:


      - set_fact:
          id: "{{ 999999 | random }}"
        run_once: yes

      - set_fact:
          sec_group: "{{ id }}-sec"
        run_once: yes

      - name: Upload public key to AWS
        ec2_key:
          name: "{{ key_name }}"
          key_material: "{{ lookup('file', '/Users/dave/.ssh/{{ key_name }}.pub') }}"
          region: "{{ region }}"
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"

      - name: Create security group
        ec2_group:
          name: "{{ sec_group }}"
          description: "Sec group for app {{ id }}"
          region: "{{ region }}"
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          rules:
            - proto: tcp
              ports:
                - 22
              cidr_ip: 0.0.0.0/0
              rule_desc: allow all on ssh port
        register: result_sec_group

      - name: Provision instances
        ec2:
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          key_name: "{{ key_name }}"
          id: "{{ id }}"
          group_id: "{{ result_sec_group.group_id }}"
          image: "{{ image }}"
          instance_type: t2.micro
          region: "{{ region }}"
          wait: true
          count: 3

      - meta: refresh_inventory
      
      - pause:
          minutes: 2

      tags: ['never', 'create_ec2']

    - name: Clear instances
      block:
      
      - name: Terminate all instances
        ec2:
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          region: "{{region}}"
          key_name: "{{ key_name }}"
          state: 'absent'
          instance_ids: "{{item.instance_id}}"
          wait: false
        loop: "{{result.instances}}"
        
      tags: ['never', 'clear_ec2']

- hosts: all
  become: yes

  tasks:
    - name: Test Dynamic Inventory
      block:
      - name: create file
        command: touch ansible.test

        
      - name: write hosts
        shell: echo {{item}} >> ansible.test
        loop: "{{ansible_play_hosts}}"

      tags: ['never', 'test_inventory']

    - name: Setup Docker on Hosts
      block:

      - name: Install pre-reqs 
        apt: 
          pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
          - python3-pip
          update_cache: yes

      - name: Add Docker CPG key
        shell: "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -"

      - name: Add Docker Repo
        apt_repository:
          repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable"

      - name: Install Docker
        apt:
          pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io 
          update_cache: yes

      - name: Install Python packages
        pip:
          name:
            - docker
            - docker-compose

      - name: Add user to docker group
        shell: usermod -aG docker ubuntu

      tags: ['never','setup_docker']

    - name: Setup CouchDB
      block:

      - name: Pull CouchDB container
        docker_image:
          name: couchdb 
          source: pull
          
      tags: ['never', 'setup_couchdb']
